??ncol
example
demo()
graphics
demo(package = .packages(all.available = TRUE))
help
help()
example
example()
help(graphics)
help(matrix)
help(bayes)
help(pdf)
example(graphics)
example(matrix)
help(dichromat)
??dichromat
??discrete
??vector
??scalar
??function
??function
?function
?function
?package
??package
m*n
m*n
r <- m*n
5*2
}
myfunction(2, 3)
library( datasets)
head(mtcars)
??mtcars
summary(mtcars)
boxplot(mtcars$mpg)
head(ability.cov)
head(airmiles)
??head
??summary
head(InsectSprays)
library(help = "datasets")
??size
??grob
install.packages("rjson")
library("rjson")
json_data <- fromJSON("pizza_request_dataset.json")
pizza_request_dataset <- read.table("~/Documents/JHU MSCS/Data Science/Datasets/pizza_request_dataset/pizza_request_dataset.json", header=TRUE, quote="\"")
View(pizza_request_dataset)
help
lrw08cy3 <- read.table("~/Documents/JHU MSCS/Data Science/Datasets/lrw08cy3.dat", quote="\"")
View(lrw08cy3)
x =11
print(x)
x
y <- 7
y
y <-9
y
ls()
rm(y)
ls()
y
y <-9
x.1 <- 14
x.1
1x <- 22
xx <- "marin"
yy = "1"
yy
11+14
7*9
x+y
z = x+y
x-y
x*y
x/y
y^2
x^2 + y^2
sqrt(y)
y^(1/2)
log(y)
exp(y)
y
log2(y)
abs(y)
the code below is for ...
# code comments
x1 = c(1,3,5,7,9)
gender = ("male", "female")
gender = c("male", "female")
2:7
seq(from = 1, to = 7, by = 1)
seq(from = 1, to = 7, by = 1/3)
rep(1, times=10)
rep("marin" times=5)
rep("marin", times=5)
rep(1:3, times=5)
rep(seq(from=2, to=5, by=.25), times=5)
rep(c("m", "f"), times=5)
x=1:5
y=c(1,3,5,7,9)
y
x+10
x - 10
x*10
x/2
x
y
x+y
x-y
x*y
x/y
y[3]
y[-3]
y[3]
y[1:3]
y[c[1,5]]
y[y<6]
y[c(1,5)]
matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,byrow=true)
matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,byrow=TRUE)
matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,byrow=FALSE)
mat = matrix(c(1,2,3,4,5,6,7,8,9), nrow=3,byrow=FALSE)
mat
mat[1,2]
mat[(c(1,3), 2]
mat[c(1,3), 2]
mat[2,]
mat[5,]
mat[,1]
mat*10
data1 = read.csv(file.choose(), header=TRUE)
data1
data2 = read.table(file.choose(), header=T, sep=",")
data2
data3 = read.delim(file.choose(), header=T)
data3
data4 = read.table(file.choose(), header=T, sep=",")
data4
rm data4
rm(data4)
rm(data3)
data3 = read.delim(file.choose(), header=T)
data3
data4 = read.table(file.choose(), header=T, sep="\t")
data4
data5 <- read.delim("~/Desktop/S&P500txt.txt")
View(data5)
dim(data5)
head(data5)
tail(data5)
tail(data5[c(5,6,7,8,9), ]
data5[c(5,6,7,8,9)]
data5[c(5,6,7,8,9), ]
data5[5:9, ]
data5[-(4:722), ]
names(data5)
mean(data5$Volume)
mean(data5$Close)
attach(data5)
mean(High)
mean(Low)
mean(Close)
detach(data5)
Close
attach(data5)
names(data5)
class(data5)
class(Ticker)
class(Open)
class(High)
levels(Ticker)
levels(High)
summary(data5)
x = c(0,1,1,1,0,0,0,0,0,0)
class(x)
summary(x)
x = as.factor(x)
class(x)
summary(x)
header(data5)
head(data5)
names(data5)
mean(Close[Ticker=="AAPL"])
mean(Close[Ticker=="S"])
mean(Close[Ticker=="BAC"])
mean(Close[Ticker=="C"])
mean(Close[Ticker=="CHASE"])
mean(Close[Ticker=="JPM"])
mean(Close[Ticker=="GOOG"])
mean(Close[Ticker=="FB"])
mean(Close[Ticker=="F"])
mean(Close[Ticker=="AFL"])
AFLData = Data5[Ticker=="AFL, "]
AFLData = data5[Ticker=="AFL, "]
AFLData
AFLData = data5[Ticker=="AFL", ]
AFLData
dim(AFLdata)
dim(AFLData)
summary(AFLData)
AFLOver51 = data5[Ticker=="AFL" & Close > 50]
AFLOver51 = data5[Ticker=="AFL" & Close > 50, ]
dim(AFLOver51)
AFLOver51 = data5[Ticker=="AFL" & Close > 51, ]
dim(AFLOver51)
AFLOver55 = data5[Ticker=="AFL" & Close > 55, ]
dim(AFLOver55)
AFLOver55
Close[1:5]
temp = Age>46
temp = Close>46
temp[1:5]
temp = as.numeric(Close>46)
temp
temp[1:5]
temp[1:5, ]
AFLData[1:5, ]
MoreData = cbind(data5, AFLData)
PriceOver55 = Close > 55
MoreData = cbind(data5, PriceOver55)
MoreData[1:10]
MoreData[1:10, ]
getwd
getwd()
save.image("RTutorials.Rdata")
rm(list=ls())
q()
setwd("~/")
getwd()
load("RTutorias.Rdata")
load("RTutorials.Rdata")
install.packages("epiR")
install.packages()
library(epiR)
help(package = epiR)
table(Ticker)
attach(data5)
table(Ticker)
count = table(Ticker)
count
count/10989
names(data5)
head(data5)
pricevar = high - low
names(data5)
pricevar = High - Low
pricevar
clear
data6 = cbind(data5, pricevar)
names(data5)
names(data6)
head(data5)
pricevarHL = pricevar
rm(pricevar)
table(Ticker = ABBV)
table(Ticker = "ABBV")
boxplot(Volume)
boxplot(Open)
boxplot(PriceOver55)
boxplot(pricevarHL)
max(pricevarHL)
mean(pricevarHL)
median(pricevarHL)
help(hist)
hist(pricevarHL, freq=F, ylim=c(0, .2), breaks=14, main="S&P 500", xlab="Volume")
hist(pricevarHL, freq=F, ylim=c(0, .2), breaks=14, main="S&P 500", xlab="Price Variance")
hist(pricevarHL, freq=F, ylim=c(0, .4), breaks=14, main="S&P 500", xlab="Price Variance")
hist(pricevarHL, prob=T, ylim=c(0, .4), breaks=14, main="S&P 500", xlab="Price Variance")
hist(pricevarHL, prob=T, ylim=c(0, .25), breaks=14, main="S&P 500", xlab="Price Variance")
hist(AFLData, prob=T, ylim=c(0, .25), breaks=14, main="S&P 500", xlab="Price Variance")
AFLData
hist(AFLData$Close, prob=T, ylim=c(0, .25), breaks=14, main="S&P 500", xlab="Price Variance")
stem(PriceOver55)
stem(pricevarHL)
.449/5
datarate = .449/5
datarate*31
datarate = .604/5
datarate*31
6.99+1.00
7.99*.065
7.99+.52
7.99*.060
6.95+1
7.95*.060
7.95+.477
7.95*.065
7.95+.52
123456123456/7
123456123456/6
123456123456/5
123456/7
123456123456/7
17636589065*7
123456123456 mod 7
123456123456 modulo 7
help(modulus)
??modulus
123456123456 % 7
123456123456 %% 7
123456123456 %% 8
123456123456 %% 5
123456123456 %% 4
123456123456 %% 3
123456123456 %% 2
123456123456 %% 13
clear
library(rjson)
json_file = "/Users/mashhoodsyed/Documents/JHU MSCS/Data Science/Datasets/Stanford/pizza_request_dataset/pizza_request_dataset.json"
json_data = fromJSON(paste(readLines(json_file), collapse""))
json_data = fromJSON(paste(readLines(json_file), collapse""))
head(json_file)
json_data = fromJSON(paste(readLines(json_file)))
json_data = fromJSON(file=json_file, unexpected.escape= "error")
head(json_data)
names(json_data)
attach(json_data)
str(json_data)
library(jsonlite)
import(jsonlite)
install.packages("jsonlite")
library(jsonlite)
data1 = (json_file)
names(data1)
names(json_data)
json_data
q()
View(AFLData)
View(AFLOver51)
View(AFLOver55)
library(rjson)
my.JSON = fromJSON(file = "/Users/mashhoodsyed/Documents/JHU MSCS/Data Science/Datasets/Stanford/pizza_request_dataset/pizzasample2.json")
my.JSON = fromJSON(file = "/Users/mashhoodsyed/Documents/JHU MSCS/Data Science/Datasets/Stanford/pizza_request_dataset/pizzasample2.json")
my.JSON = fromJSON(file = "/Users/mashhoodsyed/Documents/JHU MSCS/Data Science/Datasets/Stanford/pizza_request_dataset/pizzasample2.json")
df <- lapply(my.JSON, function(play) # Loop through each "play"
{
# Convert each group to a data frame.
# This assumes you have 6 elements each time
data.frame(matrix(unlist(play), ncol=33, byrow=T))
})
??play
??lapply
df <- do.call(rbind, df)
colnames(df) <- names(my.JSON[[1]][[1]])
rownames(df) <- NULL
df
load("~/Downloads/davis.RData")
davis
help(data.frame)
data1 = read.csv(file.choose())
data1 = read.csv(file.choose(), header=T)
view(data1)
data1
6.5+8
14.5/6
?lm
?datasets
library(datasets)
import(iris
)
?iris
iris
data = iris
View(data)
attach(data)
lm(Sepal.Length~Sepal.Width, data)
lm(Petal.Length, Petal.Width, data)
lm(Petal.Length~Petal.Width, data)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ggplot(data) + geom_point(aes(x=Petal.Length, y=Petal.Width)) + geom_abline(intercept=1.084, slope=2.230) + theme_bw()
fit.1 = lm(Sepal.Length~Sepal.Width + Petal + Petal.Length)
fit.1 = lm(Sepal.Length~Sepal.Width + Petal.Length)
fit.1
?formula
setwd("~/Desktop/PS2")
ts_file = "~/Desktop/PS2/crunchbase_monthly_export.csv"
ts_data = read.csv(ts_file, header=T)
funding = ts_data$funding_total_usd
test <- funding
destring <- function(x,keep="0-9.") {
return( as.numeric(gsub(paste("[^",keep,"]+",sep=""),"",x)) )
}
funding_num = destring(test)
ts_data = cbind(ts_data, funding_num)
ts_data3 = subset(ts_data, market == " Software ")
ts_data_final = ts_data3
cali = subset(ts_data_final, state_code == "CA")
sfbay = subset(cali, region == "SF Bay Area")
la = subset(cali, region == "Los Angeles")
View(la)
fit.1 = lm(Sepal.Length~Sepal.Width + Petal.Length)
library(ggplot2)
hist(la$founded_year, prob=T, ylim=c(0, 1), breaks = 150, main = " ", xlab = " ", col=4)
ggplot(la, aes(x=city)) + geom_histogram(aes(y=..count..)) + ylab( "Count Of Startups") + xlab( "City") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(la, aes(x=city)) + geom_histogram(aes(y=..count..)) + ylab( "Count Of Startups") + xlab( "City") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
